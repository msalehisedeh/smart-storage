{"version":3,"sources":["ng://wizard-storage/src/app/wizard-storage/wizard-storage.service.ts","ng://wizard-storage/src/app/wizard-storage/wizard-storage.directive.ts","ng://wizard-storage/src/app/wizard-storage/wizard-storage.module.ts"],"names":["WizardStorageService","_this","this","local","session","cookies","Object","isSupported","sessionStorage","onchange","key","onChange","setItem","value","version","expires","getItem","hasItem","removeItem","oldV","subjects","undefined","next","oldValue","newValue","url","document","location","href","getAllKeys","clear","localStorage","domain","path","isSecure","test","willExpires","zVal","JSON","stringify","cookie","encodeURIComponent","result","decodeURIComponent","replace","RegExp","toJson","aKeys","split","nIdx","length","map","item","prototype","storage","itemBackup","e","store","content","parse","data","Date","getTime","d","setTime","i","push","BehaviorSubject","x","Injectable","WizardStorageDirective","wizardService","EventEmitter","onHover","event","wizardStorage","emit","Directive","args","selector","HostListener","Output","WizardStorageModule","NgModule","declarations","exports","imports","CommonModule","providers","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["\r\n/*\r\n* WizardStorage provides an easy way to use web storage capabilities of modern web browsers.\r\n*\r\n* reference to browser compatibilities.\r\n* https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage#Browser_compatibility\r\n* https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage#Browser_compatibility\r\n*/\r\nimport {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class WizardStorageService {\r\n\r\n    public local: any;\r\n    public session: any;\r\n    public cookies: any;\r\n\r\n    private subjects = {\r\n        local: {},\r\n        session: {},\r\n        cookies: {}\r\n    };\r\n\r\n    private isSupported(storage: any) {\r\n        try {\r\n            const itemBackup = storage.getItem('');\r\n            storage.removeItem('');\r\n            storage.setItem('', itemBackup);\r\n            if (itemBackup === null) {\r\n                storage.removeItem('');\r\n            } else {\r\n                storage.setItem('', itemBackup);\r\n            }\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    private getItem(store: string, key: string, version?: string) {\r\n        const storage: any = store === 'session' ? sessionStorage : localStorage\r\n        const item = storage.getItem(key);\r\n        let content: any = {};\r\n        let result: any;\r\n\r\n        if (item) {\r\n            try {\r\n                content = JSON.parse(item);\r\n            } catch (e) {\r\n                content = {\r\n                    data: item\r\n                };\r\n            }\r\n        }\r\n\r\n        if (version && content.version) {\r\n            if (version == content.version) {\r\n                result = content.data;\r\n            } else {\r\n                result = undefined;\r\n            }\r\n        } else {\r\n            result = content.data;\r\n        }\r\n        if (result && content.expires) {\r\n            if (new Date().getTime() >= content.expires) {\r\n                storage.removeItem(key);\r\n                if (this.subjects[store][key]) {\r\n                    this.subjects[store][key].next({\r\n                        key: key,\r\n                        oldValue: content,\r\n                        newValue: null,\r\n                        url: document.location.href\r\n                    });\r\n                }\r\n                result = undefined;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    private setItem(store: string, key: string, value: any, version?: string, expires?: number) {\r\n        const storage: any = store === 'session' ? sessionStorage : localStorage\r\n        const content: any = {data: value};\r\n\r\n        if (version) {\r\n            content.version = version;\r\n        }\r\n        if (expires != undefined) {\r\n            const d = new Date();\r\n            d.setTime(d.getTime() + (expires*3600000)); \r\n            content.expires = d.getTime();\r\n        }\r\n        const oldV = storage.getItem(key);\r\n        storage.setItem(key, JSON.stringify(content));\r\n        if (this.subjects[store][key]) {\r\n            this.subjects[store][key].next({\r\n                key: key,\r\n                oldValue: oldV,\r\n                newValue: content,\r\n                url: document.location.href\r\n            });\r\n        }\r\n    }\r\n    private getAllKeys(storage: any) {\r\n        const result = [];\r\n        for(let i = 0; i < storage.length; i++) {\r\n            result.push(storage.key( i ));\r\n        }\r\n        return result;\r\n    }\r\n    private onChange(key: string, storage: string) {\r\n        if (!this.subjects[storage][key]) {\r\n            this.subjects[storage][key] = new BehaviorSubject<any>(null);\r\n        }\r\n        return this.subjects[storage][key];\r\n    }\r\n\r\n    constructor() {\r\n\r\n        this.session = new Object();\r\n        this.session.isSupported = () => {return this.isSupported(sessionStorage)};\r\n        this.session.onchange = (key: string) => {return this.onChange(key, 'session')}\r\n        this.session.setItem = (key: string, value: any, version?: string, expires?: number) => {\r\n            this.setItem('session', key, value, version, expires);\r\n        };\r\n        this.session.getItem = (key: string, version?: string) => {return this.getItem('session', key, version)};\r\n        this.session.hasItem = (key: string) => {return sessionStorage.getItem(key) !== null};\r\n        this.session.removeItem = (key: string) => {\r\n            const oldV = this.subjects.session[key] ? this.session.getItem(key): undefined;\r\n            sessionStorage.removeItem(key);\r\n            if (this.subjects.session[key]) {\r\n                this.subjects.session[key].next({\r\n                    key: key,\r\n                    oldValue: oldV,\r\n                    newValue: null,\r\n                    url: document.location.href\r\n                });\r\n            }\r\n        };\r\n        this.session.getAllKeys = () => {return this.getAllKeys(sessionStorage)};\r\n        this.session.clear = () => { sessionStorage.clear()};\r\n\r\n        \r\n        this.local = new Object();\r\n        this.local.isSupported = () => {return this.isSupported(localStorage)};\r\n        this.local.onchange = (key: string) => {return this.onChange(key, 'local')}\r\n        this.local.setItem = (key: string, value: any, version?: string, expires?: number) => {\r\n            this.setItem('local', key, value,version, expires);\r\n        };\r\n        this.local.getItem = (key: string, version?: string) => {return this.getItem('local', key, version)};\r\n        this.local.hasItem = (key: string) => {return localStorage.getItem(key) !== null};\r\n        this.local.removeItem = (key: string) => {\r\n            const oldV = this.subjects.local[key] ? this.local.getItem(key): undefined;\r\n            localStorage.removeItem(key)\r\n            if (this.subjects.local[key]) {\r\n                this.subjects.local[key].next({\r\n                    key: key,\r\n                    oldValue: oldV,\r\n                    newValue: null,\r\n                    url: document.location.href\r\n                });\r\n            }\r\n        };\r\n        this.local.getAllKeys = () => {return this.getAllKeys(localStorage)};\r\n        this.local.clear = () => {localStorage.clear()};\r\n\r\n        this.cookies =  new Object();\r\n        this.cookies.isSupported = () => {return true;};\r\n        this.cookies.onchange = (key: string) => {return this.onChange(key, 'cookies')}\r\n        this.cookies.setItem = (key: string, value: any, expires?: number, domain?: string, path?: string, isSecure?: boolean) => {\r\n            if (!key || /^(?:expires|max\\-age|path|domain|secure)$/i.test(key)) {\r\n                return false;\r\n            }\r\n            let willExpires = \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\";\r\n            if (expires) {\r\n                willExpires = \"; max-age=\" + (expires*3600000);\r\n            }\r\n            const oldV = this.cookies.getItem(key);\r\n            let zVal = value;\r\n            if (typeof value === 'object'){\r\n                zVal = JSON.stringify(value);\r\n            }\r\n            document.cookie = encodeURIComponent(key) + \"=\" +\r\n                              encodeURIComponent(zVal) +\r\n                              willExpires + (domain ? \"; domain=\" + domain : \"\") +\r\n                              (path ? \"; path=\" + path : \"\") +\r\n                              (isSecure ? \"; secure\" : \"\");\r\n            if (this.subjects.cookies[key]) {\r\n                this.subjects.cookies[key].next({\r\n                    key: key,\r\n                    oldValue: oldV,\r\n                    newValue: value,\r\n                    url: document.location.href\r\n                });\r\n            }\r\n            return true;\r\n        };\r\n        this.cookies.getItem = (key: string) => {\r\n            const result = decodeURIComponent(\r\n                document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" +\r\n                encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\r\n                \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\r\n            return this.toJson(result);\r\n        };\r\n        this.cookies.hasItem = (key: string) => {\r\n            return (\r\n                new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")\r\n            ).test(document.cookie);\r\n        };\r\n        this.cookies.removeItem = (key: string, path?: string, domain?: string) => {\r\n            if (!key || !this.cookies.hasItem(key)) {\r\n                return false;\r\n            }\r\n            const oldV = this.subjects.cookies[key] ? this.cookies.getItem(key): undefined;\r\n            document.cookie = encodeURIComponent(key) +\r\n                            \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" +\r\n                            ( domain ? \"; domain=\" + domain : \"\") +\r\n                            ( path ? \"; path=\" + path : \"\");\r\n            if (this.subjects.cookies[key]) {\r\n                this.subjects.cookies[key].next({\r\n                    key: key,\r\n                    oldValue: oldV,\r\n                    newValue: null,\r\n                    url: document.location.href\r\n                });\r\n            }\r\n            return true;\r\n        };\r\n        this.cookies.getAllKeys = () => {\r\n            var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n            for (var nIdx = 0; nIdx < aKeys.length; nIdx++) {\r\n                aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);\r\n            }\r\n            return aKeys;\r\n        };\r\n        this.cookies.clear = () => {\r\n            this.cookies.getAllKeys().map(\r\n                (item: string) => {\r\n                    this.cookies.removeItem(item);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    toJson(value: any) {\r\n        let x = value;\r\n        try {\r\n            x = JSON.parse(value);\r\n        }catch(e){}\r\n        return x;\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    HostListener,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { WizardStorageService } from './wizard-storage.service';\r\n\r\n@Directive({\r\n    selector: '[wizardStorage]'\r\n})\r\nexport class WizardStorageDirective {\r\n\r\n    // Will listen to localStorage changes made\r\n    // by other applications.\r\n    @HostListener('window:storage', ['$event'])\r\n    onHover(event: any) {\r\n        this.wizardStorage.emit({\r\n            key: event.key,\r\n            oldValue: this.wizardService.toJson(event.oldValue),\r\n            newValue: this.wizardService.toJson(event.newValue),\r\n            url: event.url\r\n        });\r\n    }\r\n\r\n    @Output()\r\n    wizardStorage: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(\r\n        private wizardService: WizardStorageService\r\n    ) {\r\n    }\r\n\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { WizardStorageService } from './wizard-storage.service';\r\nimport { WizardStorageDirective } from './wizard-storage.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WizardStorageDirective\r\n  ],\r\n  exports: [\r\n    WizardStorageDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    WizardStorageService\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class WizardStorageModule { }\r\n"]}